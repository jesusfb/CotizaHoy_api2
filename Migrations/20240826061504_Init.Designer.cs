// <auto-generated />
using System;
using DotNet8WebAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CotizaHoyAPI.Migrations
{
    [DbContext(typeof(OurHeroDbContext))]
    [Migration("20240826061504_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("CotizaHoyAPI.Model.vCotizaciones", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("mediumtext");

                    b.Property<double>("Cantidad")
                        .HasColumnType("text");

                    b.Property<decimal>("CostoTotal")
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Iva")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NombreCliente")
                        .HasMaxLength(256)
                        .HasColumnType("INTEGER");

                    b.Property<int>("NombreProducto")
                        .HasMaxLength(256)
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Precio")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable((string)null);

                    b.ToView("vCotizaciones", (string)null);
                });

            modelBuilder.Entity("DotNet8WebAPI.Model.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApellidoMaterno = "Figueroa",
                            ApellidoPaterno = "Figueroa",
                            CorreoElectronico = "jfigueroa.beltran@gmail.com",
                            Direccion = "Campo 5",
                            Nombres = "Jesus",
                            Telefono = "6645400921"
                        });
                });

            modelBuilder.Entity("DotNet8WebAPI.Model.Cotizaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Cantidad")
                        .HasColumnType("REAL");

                    b.Property<int>("ClienteFk")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CostoTotal")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Iva")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoFk")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Cotizaciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 1.0,
                            ClienteFk = 1,
                            CostoTotal = 444m,
                            Fecha = new DateTime(2024, 8, 25, 23, 15, 1, 338, DateTimeKind.Local).AddTicks(7201),
                            Iva = true,
                            Precio = 444m,
                            ProductoFk = 1
                        });
                });

            modelBuilder.Entity("DotNet8WebAPI.Model.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Marca")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Marca = "Sabritas",
                            Nombre = "Paquetaxos",
                            Precio = 15m
                        });
                });

            modelBuilder.Entity("DotNet8WebAPI.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("isActive")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Jesus",
                            LastName = "Figueroa",
                            Password = "$2a$11$.VDjrCaXGxR2k4mtUgc5H.lrsnBTTmEa7FjipBgyUYTNwI.zwBViO",
                            Username = "jfigueroa.beltran@gmail.com",
                            isActive = false
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
